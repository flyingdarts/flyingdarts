name: Test FLutter Solution

on:
  workflow_call:
    inputs:
      project-name:
        description: "Name of the project within Turbo context. (package.json name)"
        required: true
        type: string
      project-directory:
        description: "Directory of the Flutter project to build"
        required: true
        type: string
      flutter-version:
        description: "Version of Flutter to use"
        required: true
        type: string
      node-version:
        description: "Version of Node.js to use"
        required: false
        type: string
        default: "22"
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Fetch all history for turbo prune

      # Setup
      - name: Cache turbo
        uses: actions/cache@v4
        with:
          path: ./dist/full/.turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ inputs.flutter-version }}
          channel: "stable"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "npm"

      - name: Install Turbo
        run: npm install -g turbo

      # Prune our application (optimized for docker)
      - name: Turbo prune
        run: turbo prune ${{ inputs.project-name }} --out-dir ./dist --docker

      # Turbo prune does not copy the pubspec.yaml or pubspec.lock file to the dist directory, so we need to copy it manually
      - name: Copy pubspec.yaml to dist/full
        run: cp pubspec.yaml ./dist/full/

      - name: Copy pubspec.lock to dist/full
        run: cp pubspec.lock ./dist/full/

      # Restore dependencies
      - name: Restore flutter dependencies
        run: flutter pub get
        working-directory: ./dist/full

      - name: Restore npm dependencies
        run: npm install
        working-directory: ./dist/full

      # Generate files
      - name: Generate files
        run: turbo run generate
        working-directory: ./dist/full

      # Build the application
      - name: Test
        run: turbo run test
        working-directory: ./dist/full/${{ inputs.project-directory }}
